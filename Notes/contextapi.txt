What is Context API?
Context API is used to pass global variables anywhere in the code. 
It helps when there is a need for sharing state between a lot of nested components.
It is light in weight and easier to use, to create a context just need to call React.createContext().
 No need to install other dependencies or third-party libraries like redux for state management.

 Why is context API used?
Context API solves the problem of prop drilling in React. 
Prop Drilling occurs when data is to be passed between multiple layers before finally sending it to the required component.
This makes the application slower

Working of Context API
To work with Context API we need React.createContext. 
It has two properties Provider and Consumer.
The Provider acts as a parent it passes the state to its children whereas the Consumer uses the state that has been passed.

type -1 
1: create the file namecontext.js
                  |   
    import react form "react"
    
    const nameconetxt = React.createContext()
    
    export default nameconetxt

2: create file  namecontextProvider.jsx
                  |
    import react form "react"
    import namecontext form "namecontext.js"

    const nameContextProvider = ({ children }) => {
    const [user, setUser] = React.useState(null);
    return (
        <namecontext .Provider value={{ user, setUser }}>
            {children}
        </namecontext .Provider>
    );
  };

  export default nameContextProvider;

3:import React, { useContext } from 'react';
import UserContext from '../context/UserContext';

function Profile() {
    const { user } = useContext(UserContext);
    if (!user) return <div>Please login</div>;

    return (
        <div>
            <p>Welcome {user.username}</p>
        </div>
    );
}

export default Profile;

4:import './App.css';
import UserContextProvider from './context/UserContextProvider';
import Login from './components/Login';
import Profile from './components/Profile';

function App() {
    return (
        <UserContextProvider>
            <Login />
            <Profile />
            <h1>Chai aur React</h1>
        </UserContextProvider>
    );
}

export default App;


type-2
  import {createContext,useContext} from "react";

  export const ThemeContext = createContext({
    themeMode: 'light',
    darkTheme: () => {},
    lightTheme:()=>{},
  })

  export const ThemeProvide = ThemeContext.Provider

  export default function useTheme(){
    return useContext(ThemeContext)
  }
   
   
